[
  {
    "objectID": "hands-on_ex/hands-on_ex_01.html",
    "href": "hands-on_ex/hands-on_ex_01.html",
    "title": "Week 1: Hands-on Exercise",
    "section": "",
    "text": "Disclaimer\n\n\n\nHands-on exercises are for my own practice and are ungraded. Thus, the plots and write-ups may be unrefined and poorly labelled.\nLet’s explore the ggplot2 package in R!"
  },
  {
    "objectID": "hands-on_ex/hands-on_ex_01.html#load-dataset",
    "href": "hands-on_ex/hands-on_ex_01.html#load-dataset",
    "title": "Week 1: Hands-on Exercise",
    "section": "Load dataset",
    "text": "Load dataset\n\nexam_data &lt;- read_csv(\"data/data_01/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "hands-on_ex/hands-on_ex_01.html#comparing-r-graphics-with-ggplot2",
    "href": "hands-on_ex/hands-on_ex_01.html#comparing-r-graphics-with-ggplot2",
    "title": "Week 1: Hands-on Exercise",
    "section": "Comparing R graphics with ggplot2",
    "text": "Comparing R graphics with ggplot2\n\nR graphicsggplot2\n\n\n\nhist(exam_data$MATHS)\n\n\n\n\n\n\n\nggplot(data=exam_data, aes(x = MATHS)) +\n  geom_histogram(bins=10, \n                 boundary = 100,\n                 color=\"black\", \n                 fill=\"grey\") +\n  ggtitle(\"Distribution of Maths scores\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot2 has a more complicated syntax, but offers much more customization options to help you make your data visualizations beautiful."
  },
  {
    "objectID": "hands-on_ex/hands-on_ex_01.html#exploring-ggplot2",
    "href": "hands-on_ex/hands-on_ex_01.html#exploring-ggplot2",
    "title": "Week 1: Hands-on Exercise",
    "section": "Exploring ggplot2",
    "text": "Exploring ggplot2\n\nBar chartDot plotHistogramKernel densityBox plotViolin plotScatterplot\n\n\n\nggplot(data = exam_data,\n       aes(x = RACE)) +\n  geom_bar()\n\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS)) +\n  geom_dotplot(dotsize = 0.5,\n               binwidth = 2.5) +\n  scale_y_continuous(NULL,\n                     breaks = NULL)\n\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS,\n           fill = GENDER)) +\n  geom_histogram(bins = 20,\n                 color = \"grey20\") +\n  scale_fill_manual(values = c(\"pink\", \"steelblue\"))\n\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS,\n           color = GENDER)) +\n  geom_density()\n\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS,\n           x = GENDER,\n           fill = GENDER)) +\n  geom_boxplot(notch = TRUE) +\n  scale_fill_manual(values = c(\"pink\", \"steelblue\"))\n\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS,\n           x = GENDER)) +\n  geom_violin()\n\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS,\n           y = ENGLISH)) +\n  geom_point() +\n  coord_cartesian(xlim = c(0, 100),\n                  ylim = c(0, 100))"
  },
  {
    "objectID": "hands-on_ex/hands-on_ex_01.html#some-other-elements",
    "href": "hands-on_ex/hands-on_ex_01.html#some-other-elements",
    "title": "Week 1: Hands-on Exercise",
    "section": "Some other elements…",
    "text": "Some other elements…\n\nCombining geom objects + stat\n\nggplot(data = exam_data,\n       aes(y = MATHS,\n           x = GENDER,\n           fill = GENDER)) +\n  geom_boxplot(notch = TRUE) +\n  geom_point(position = \"jitter\",\n             size = 0.5) +\n  scale_fill_manual(values = c(\"pink\", \"steelblue\")) +\n  stat_summary(geom = \"point\",\n               fun = \"mean\",\n               colour = \"red\",\n               size = 4) +\n  theme_classic()\n\n\n\n\n\n\n\n\n\n\nTheme used: Classic\n\n\n\n\n\n\n\n\nScatterplot with best fit line!\n\nggplot(data = exam_data,\n       aes(x = MATHS,\n           y = ENGLISH)) +\n  geom_point() +\n  geom_smooth(method = lm,\n              linewidth = 0.5)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\nWorking with facets\n\nggplot(data = exam_data,\n       aes(x = MATHS)) +\n  geom_histogram(bins = 20) +\n  facet_wrap(~ CLASS) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\nTheme used: Minimal\n\n\n\n\n\n\nAnd that’s it for Week 1!"
  },
  {
    "objectID": "hands-on_ex/hands-on_ex_02.html",
    "href": "hands-on_ex/hands-on_ex_02.html",
    "title": "Week 2: Hands-on Exercise",
    "section": "",
    "text": "Disclaimer\n\n\n\nHands-on exercises are for my own practice and are ungraded. Thus, the plots and write-ups may be unrefined and poorly labelled."
  },
  {
    "objectID": "hands-on_ex/hands-on_ex_02.html#load-dataset",
    "href": "hands-on_ex/hands-on_ex_02.html#load-dataset",
    "title": "Week 2: Hands-on Exercise",
    "section": "Load dataset",
    "text": "Load dataset\n\nexam_data &lt;- read_csv(\"data/data_02/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "hands-on_ex/hands-on_ex_02.html#why-use-ggrepel",
    "href": "hands-on_ex/hands-on_ex_02.html#why-use-ggrepel",
    "title": "Week 2: Hands-on Exercise",
    "section": "Why use ggrepel?",
    "text": "Why use ggrepel?\nWhen there is a large number of data points, it may become difficult to annotate the graph using traditional ggplot2:\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              linewidth=0.5) +  \n  geom_label(aes(label = ID), \n             hjust = .5, \n             vjust = -.5) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\n\n\nTo use ggrepel, we just need to replace geom_text() by geom_text_repel() and geom_label() by geom_label_repel()"
  },
  {
    "objectID": "hands-on_ex/hands-on_ex_02.html#example-of-using-ggrepel",
    "href": "hands-on_ex/hands-on_ex_02.html#example-of-using-ggrepel",
    "title": "Week 2: Hands-on Exercise",
    "section": "Example of using ggrepel",
    "text": "Example of using ggrepel\n\nPlotCode\n\n\n\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\nWarning: ggrepel: 317 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label_repel(aes(label = ID), \n                   fontface = \"bold\") +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\nWarning: ggrepel: 317 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps"
  },
  {
    "objectID": "hands-on_ex/hands-on_ex_02.html#themes-themes-cool-themes-from-ggtheme-package",
    "href": "hands-on_ex/hands-on_ex_02.html#themes-themes-cool-themes-from-ggtheme-package",
    "title": "Week 2: Hands-on Exercise",
    "section": "Themes! Themes! Cool themes! From ggtheme package",
    "text": "Themes! Themes! Cool themes! From ggtheme package\nWhile ggplot2 has some built-in themes such as theme_gray(), theme_bw(), theme_classic(), theme_dark(), theme_light(), theme_linedraw(), theme_minimal(), and theme_void(), we can also use some cool themes from ggtheme.\n\ntheme_gray()The EconomistWSJOld Excel"
  },
  {
    "objectID": "hands-on_ex/hands-on_ex_02.html#using-hrbthemes-package",
    "href": "hands-on_ex/hands-on_ex_02.html#using-hrbthemes-package",
    "title": "Week 2: Hands-on Exercise",
    "section": "Using hrbthemes package",
    "text": "Using hrbthemes package\nhrbthemes focuses on typographic elements, allowing you to customize label placements and fonts used.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum(axis_title_size = 18,\n              base_size = 15,\n              grid = \"\")\n\n\n\n\n\n\n\n\n\n\nTips\n\n\n\n\naxis_title_size alters the font size of the axis title\nbase_size messes with the default axis labels\ngrid determines whether you see grids. It accepts the following values: TRUE, FALSE, X, x, Y, y, or a combination, i.e., XY"
  },
  {
    "objectID": "hands-on_ex/hands-on_ex_02.html#patchwork-patching-multiple-graphs-together",
    "href": "hands-on_ex/hands-on_ex_02.html#patchwork-patching-multiple-graphs-together",
    "title": "Week 2: Hands-on Exercise",
    "section": "patchwork! Patching multiple graphs together",
    "text": "patchwork! Patching multiple graphs together\nImagine that you have multiple graphs:\n\np1 &lt;- ggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n\n\np2 &lt;- ggplot(data=exam_data, \n             aes(x = ENGLISH)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n\n\np3 &lt;- ggplot(data=exam_data, \n             aes(x= MATHS, \n                 y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\nYou can combine two graphs together side by side:\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\np1 + p2\n\n\n\n\nOr combine three of them using the following operators:\n\n“|” operator to place the plots side by side\n“/” operator to stack one on top of another\n“()” operator the define the sequence of plotting\n\nAnd also add the following:\n\nplot_annotation(), which will automatically tag the different figures\ninset_element(), which will add another plot based on your specified position (not demonstrated)\n\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'A') & theme_economist()"
  },
  {
    "objectID": "hands-on_ex/hands-on_ex_03.html",
    "href": "hands-on_ex/hands-on_ex_03.html",
    "title": "Week 3: Hands-on Exercise",
    "section": "",
    "text": "Disclaimer\n\n\n\nHands-on exercises are for my own practice and are ungraded. Thus, the plots and write-ups may be unrefined and poorly labelled."
  },
  {
    "objectID": "hands-on_ex/hands-on_ex_03.html#load-dataset",
    "href": "hands-on_ex/hands-on_ex_03.html#load-dataset",
    "title": "Week 3: Hands-on Exercise",
    "section": "Load dataset",
    "text": "Load dataset\n\nexam_data &lt;- read_csv(\"data/data_03/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nggiraph is a ggplot2 extension that can allow plots to become interactive. Three arguments are accepted:\n\nTooltip\nOnclick\nData_id\n\nIts usage will be demonstrated via the example code chunks below."
  },
  {
    "objectID": "hands-on_ex/hands-on_ex_03.html#tooltip-aesthetic",
    "href": "hands-on_ex/hands-on_ex_03.html#tooltip-aesthetic",
    "title": "Week 3: Hands-on Exercise",
    "section": "Tooltip aesthetic",
    "text": "Tooltip aesthetic\n\nexam_data$tooltip &lt;- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS))\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 8,\n  height_svg = 8*0.618\n)\n\n\n\n\n\n\n\n\n\n\n\nHow to achieve interactivity?\n\n\n\nUse the interactive version of ggplot2 geom functions. Then, use girafe() to generate an svg object to be displayed on an html page.\nIn this example, hovering over data points reveal the student’s name and class for that data point.\n\n\n\n\n\n\n\n\nFurther customization\n\n\n\nggiraph objects can be customized via options = and opts_tooltip() by adding css declarations.\n\n\nYou can also display statistics on tooltips!\n\ntooltip &lt;- function(y, ymax, accuracy = .01) {\n  mean &lt;- scales::number(y, accuracy = accuracy)\n  sem &lt;- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem)\n}\n\ngg_point &lt;- ggplot(data=exam_data, \n                   aes(x = RACE),\n) +\n  stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  \n    fill = \"light blue\"\n  ) +\n  stat_summary(aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, size = 0.2\n  )\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)"
  },
  {
    "objectID": "hands-on_ex/hands-on_ex_03.html#data_id-aesthetic",
    "href": "hands-on_ex/hands-on_ex_03.html#data_id-aesthetic",
    "title": "Week 3: Hands-on Exercise",
    "section": "Data_id aesthetic",
    "text": "Data_id aesthetic\n\np &lt;- ggplot(data=exam_data,\n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = CLASS, \n        data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618\n)                                                                     \n\n\n\n\n\n\n\n\n\n\n\nInteractivity\n\n\n\nElements associated with a certain data_id will be highlighted when your cursor hovers over a data point with that data_id. In this example, this was achieved in addition to the tooltip aesthetic (that will display the data_id)."
  },
  {
    "objectID": "hands-on_ex/hands-on_ex_03.html#onclick-aesthetic",
    "href": "hands-on_ex/hands-on_ex_03.html#onclick-aesthetic",
    "title": "Week 3: Hands-on Exercise",
    "section": "Onclick aesthetic",
    "text": "Onclick aesthetic\nonclick can be used to hyperlink to other websites on the Internet.\n\nexam_data$onclick &lt;- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\nas.character(exam_data$ID))\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(onclick = onclick),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618)                               \n\n\n\n\n\n\n\n\n\n\n\nJavascript instructions\n\n\n\nNote the additional column created in the dataset exam_data called onclick that specifies the javascript to open a window with the given URL. This is necessary to make onclick work!"
  },
  {
    "objectID": "hands-on_ex/hands-on_ex_03.html#coordinating-between-two-plots",
    "href": "hands-on_ex/hands-on_ex_03.html#coordinating-between-two-plots",
    "title": "Week 3: Hands-on Exercise",
    "section": "Coordinating between two plots",
    "text": "Coordinating between two plots\npatchwork can be used with what we have learnt today as well! The two plots will show the data points with the same data_id upon cursor hover:\n\np1 &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID,\n        tooltip = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\np2 &lt;- ggplot(data=exam_data, \n       aes(x = ENGLISH)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID,\n        tooltip = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\ngirafe(code = print(p1 + p2), \n       width_svg = 6,\n       height_svg = 3,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       )"
  },
  {
    "objectID": "hands-on_ex/hands-on_ex_03.html#using-plotly-methods-to-achieve-interactive-data-visualization",
    "href": "hands-on_ex/hands-on_ex_03.html#using-plotly-methods-to-achieve-interactive-data-visualization",
    "title": "Week 3: Hands-on Exercise",
    "section": "Using plotly methods to achieve interactive data visualization",
    "text": "Using plotly methods to achieve interactive data visualization\nThere are two ways of doing this:\n\nplot_ly()\nggplotly()\n\n\nplot_ly()Code\n\n\n\n\n\n\n\n\n\n\n\nplot_ly(data = exam_data, \n        x = ~ENGLISH, \n        y = ~MATHS, \n        color = ~RACE)\n\n\n\n\n\nggplotly()Code\n\n\n\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH,\n                color = RACE)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nggplotly(p)\n\n\n\n\nYou can achieve a coordinated linked plot using highlight_key() and subplot() to place the plots side by side.\n\nplot_ly()Code\n\n\n\n\n\n\n\n\n\n\n\nplot_ly(data = exam_data, \n        x = ~ENGLISH, \n        y = ~MATHS, \n        color = ~RACE)\n\n\n\n\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\nd &lt;- highlight_key(exam_data)\np1 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\np2 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = SCIENCE)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nsubplot(ggplotly(p1),\n        ggplotly(p2))"
  },
  {
    "objectID": "hands-on_ex/hands-on_ex_03.html#using-crosstalk-methods",
    "href": "hands-on_ex/hands-on_ex_03.html#using-crosstalk-methods",
    "title": "Week 3: Hands-on Exercise",
    "section": "Using crosstalk methods",
    "text": "Using crosstalk methods\nExample of usage below:\n\nd &lt;- highlight_key(exam_data[c('ID', 'CLASS', 'GENDER', 'RACE', 'ENGLISH','MATHS', 'SCIENCE')]) \np &lt;- ggplot(d, \n            aes(ENGLISH, \n                MATHS)) + \n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\ngg &lt;- highlight(ggplotly(p),        \n                \"plotly_selected\")  \n\ncrosstalk::bscols(gg,               \n                  DT::datatable(d), \n                  widths = 4)"
  },
  {
    "objectID": "hands-on_ex/hands-on_ex_03.html#basics-of-animation-using-gganimate",
    "href": "hands-on_ex/hands-on_ex_03.html#basics-of-animation-using-gganimate",
    "title": "Week 3: Hands-on Exercise",
    "section": "Basics of animation using gganimate",
    "text": "Basics of animation using gganimate\nSome terminology associated with animated plots:\n\nFrame: In an animated line graph, each frame represents a different point in time or a different category. When the frame changes, the data points on the graph are updated to reflect the new data.\nAnimation Attributes: The animation attributes are the settings that control how the animation behaves. For example, you can specify the duration of each frame, the easing function used to transition between frames, and whether to start the animation from the current frame or from the beginning."
  },
  {
    "objectID": "hands-on_ex/hands-on_ex_03.html#importing-data",
    "href": "hands-on_ex/hands-on_ex_03.html#importing-data",
    "title": "Week 3: Hands-on Exercise",
    "section": "Importing data",
    "text": "Importing data\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"data/data_03/GlobalPopulation.xls\",\n                      sheet=\"Data\") %&gt;%\n  mutate_each_(funs(factor(.)), col) %&gt;%\n  mutate(Year = as.integer(Year))\n\nFirst, we create a static bubble plot using our data:\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') \n\n\n\n\nThen, we add transition_time() and ease_aes() to create the animations:\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') +\n  transition_time(Year) +       \n  ease_aes('linear')"
  },
  {
    "objectID": "hands-on_ex/hands-on_ex_03.html#basics-of-animation-using-ggplotly",
    "href": "hands-on_ex/hands-on_ex_03.html#basics-of-animation-using-ggplotly",
    "title": "Week 3: Hands-on Exercise",
    "section": "Basics of animation using ggplotly()",
    "text": "Basics of animation using ggplotly()\nThis is done using the frame argument within the aesthetics (not executed to save render time).\nExample code:\n```{r}\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young')\n\nggplotly(gg)\n```\n\n\n\n\n\n\n`frame =` argument\n\n\n\nNote the frame = argument within the geom_point’s aesthetics, specifying that the animation should be done across Year."
  },
  {
    "objectID": "hands-on_ex/hands-on_ex_03.html#basics-of-animation-using-plot_ly",
    "href": "hands-on_ex/hands-on_ex_03.html#basics-of-animation-using-plot_ly",
    "title": "Week 3: Hands-on Exercise",
    "section": "Basics of animation using plot_ly()",
    "text": "Basics of animation using plot_ly()\nThis is also done using the frame argument (not executed to save render time):\n```{r}\nbp &lt;- globalPop %&gt;%\n  plot_ly(x = ~Old, \n          y = ~Young, \n          size = ~Population, \n          color = ~Continent, \n          frame = ~Year, \n          text = ~Country, \n          hoverinfo = \"text\",\n          type = 'scatter',\n          mode = 'markers'\n          )\nbp\n```"
  },
  {
    "objectID": "hands-on_ex/hands-on_ex_04.html",
    "href": "hands-on_ex/hands-on_ex_04.html",
    "title": "Week 4: Hands-on Exercise",
    "section": "",
    "text": "Disclaimer\n\n\n\nHands-on exercises are for my own practice and are ungraded. Thus, the plots and write-ups may be unrefined and poorly labelled."
  },
  {
    "objectID": "hands-on_ex/hands-on_ex_04.html#visualising-distributions-of-data",
    "href": "hands-on_ex/hands-on_ex_04.html#visualising-distributions-of-data",
    "title": "Week 4: Hands-on Exercise",
    "section": "Visualising distributions of data",
    "text": "Visualising distributions of data\n\nLoad packages\n\nggridges is a ggplot2 extension for plotting ridgeline plots;\nggdist is an extension for visualising distributions and uncertainty.\n\n\n\nLoad dataset\n\nexam &lt;- read_csv(\"data/data_04/Exam_Data.csv\",\n                 show_col_types = FALSE)\n\n\n\nUsing ggridges\nTwo ‘geoms’ can be used:\n\ngeom_ridgeline() uses the specified height values to draw ridgelines;\ngeom_density_ridges() estimates data densities to draw ridgelines.\n\nDemonstration using the latter:\n\ngeom_density_ridges()Code\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = ENGLISH, \n           y = CLASS)) +\n  geom_density_ridges(\n    scale = 3,\n    rel_min_height = 0.01,\n    bandwidth = 3.4,\n    fill = lighten(\"#7097BB\", .3),\n    color = \"white\"\n  ) +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n    ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n\n\n\n\n\n\nAdding colour\nColour can be added in a few ways:\n\nBased on the value along the x-axis;\nBased on cumulative density function (cdf) values.\nBased on quantiles\nBased on cut-off points\n\nDemonstration of the respective ways can be found below:\n\nBy x-axis value\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = ENGLISH, \n           y = CLASS,\n           fill = stat(x))) +\n  geom_density_ridges_gradient(\n    scale = 3,\n    rel_min_height = 0.01) +\n  scale_fill_viridis_c(name = \"Temp. [F]\",\n                       option = \"C\") +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n  ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n\n\n\n\n\n\nBy cdf value\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = 0.5 - abs(0.5-stat(ecdf)))) +\n  stat_density_ridges(geom = \"density_ridges_gradient\", \n                      calc_ecdf = TRUE) + # note: this line is important\n  scale_fill_viridis_c(name = \"Tail probability\",\n                       direction = -1) +\n  theme_ridges()\n\n\n\n\n\n\nBy quantiles\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges()\n\n\n\n\n\n\nBy cut-off point\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = c(0.025, 0.975)\n    ) +\n  scale_fill_manual(\n    name = \"Probability\",\n    values = c(\"#FF0000A0\", \"#A0A0A0A0\", \"#0000FFA0\"),\n    labels = c(\"(0, 0.025]\", \"(0.025, 0.975]\", \"(0.975, 1]\")\n  ) +\n  theme_ridges()\n\n\n\n\n\n\n\nPlotting Raincloud plots\nAn example can be found below:\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 1.5) +\n  coord_flip() +\n  theme_economist()"
  },
  {
    "objectID": "hands-on_ex/hands-on_ex_template.html",
    "href": "hands-on_ex/hands-on_ex_template.html",
    "title": "Week X: Hands-on Exercise",
    "section": "",
    "text": "Disclaimer\n\n\n\nHands-on exercises are for my own practice and are ungraded. Thus, the plots and write-ups may be unrefined and poorly labelled."
  },
  {
    "objectID": "in-class_ex/in-class_ex_01.html",
    "href": "in-class_ex/in-class_ex_01.html",
    "title": "Week 1: In-class Exercise",
    "section": "",
    "text": "You may access it here."
  },
  {
    "objectID": "in-class_ex/in-class_ex_01.html#creating-my-first-tableau-dashboard",
    "href": "in-class_ex/in-class_ex_01.html#creating-my-first-tableau-dashboard",
    "title": "Week 1: In-class Exercise",
    "section": "",
    "text": "You may access it here."
  },
  {
    "objectID": "in-class_ex/in-class_ex_02.html",
    "href": "in-class_ex/in-class_ex_02.html",
    "title": "Week 2: In-class Exercise",
    "section": "",
    "text": "You may access it here."
  },
  {
    "objectID": "in-class_ex/in-class_ex_02.html#more-tableau-dashboarding",
    "href": "in-class_ex/in-class_ex_02.html#more-tableau-dashboarding",
    "title": "Week 2: In-class Exercise",
    "section": "",
    "text": "You may access it here."
  },
  {
    "objectID": "in-class_ex/in-class_ex_03.html",
    "href": "in-class_ex/in-class_ex_03.html",
    "title": "Week 3: In-class Exercise",
    "section": "",
    "text": "You may access it here."
  },
  {
    "objectID": "in-class_ex/in-class_ex_03.html#more-tableau-dashboarding",
    "href": "in-class_ex/in-class_ex_03.html#more-tableau-dashboarding",
    "title": "Week 3: In-class Exercise",
    "section": "",
    "text": "You may access it here."
  },
  {
    "objectID": "in-class_ex/in-class_ex_04.html",
    "href": "in-class_ex/in-class_ex_04.html",
    "title": "Week 4: In-class Exercise",
    "section": "",
    "text": "pacman::p_load(rstatix, gt, patchwork, tidyverse, webshot2, png)\n\n\nexam_data &lt;- read_csv(\"data/data_04/Exam_data.csv\", show_col_types = FALSE)"
  },
  {
    "objectID": "in-class_ex/in-class_ex_04.html#load-packages-and-dataset",
    "href": "in-class_ex/in-class_ex_04.html#load-packages-and-dataset",
    "title": "Week 4: In-class Exercise",
    "section": "",
    "text": "pacman::p_load(rstatix, gt, patchwork, tidyverse, webshot2, png)\n\n\nexam_data &lt;- read_csv(\"data/data_04/Exam_data.csv\", show_col_types = FALSE)"
  },
  {
    "objectID": "in-class_ex/in-class_ex_04.html#quantile-quantile-q-q-plot",
    "href": "in-class_ex/in-class_ex_04.html#quantile-quantile-q-q-plot",
    "title": "Week 4: In-class Exercise",
    "section": "Quantile-Quantile (Q-Q) Plot",
    "text": "Quantile-Quantile (Q-Q) Plot\nQ-Q plots are used to check for normality of data. The points should fit close to the straight line if the variable in question is indeed normally distributed.\nIn this case, we are checking if ‘English’ scores are normally distributed:\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(exam_data,\n       aes(sample = ENGLISH)) +\n  stat_qq() +\n  stat_qq_line()\n\n\n\n\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nqq &lt;- ggplot(exam_data,\n             aes(sample = ENGLISH)) +\n  stat_qq() +\n  stat_qq_line()\n\nsw_t &lt;- exam_data %&gt;% shapiro_test(ENGLISH) %&gt;% gt()\n\ntmp &lt;- tempfile(fileext = \".png\")\ngtsave(sw_t, tmp)\ntable_png &lt;- png::readPNG(tmp, native = TRUE)\n\nqq + table_png"
  },
  {
    "objectID": "in-class_ex/in-class_ex_05.html",
    "href": "in-class_ex/in-class_ex_05.html",
    "title": "Week 5: In-class Exercise",
    "section": "",
    "text": "pacman::p_load(jsonlite, tidygraph, ggraph, visNetwork, tidyverse)\n\nInstalling package into 'C:/Users/willi/AppData/Local/R/win-library/4.3'\n(as 'lib' is unspecified)\n\n\nalso installing the dependency 'igraph'\n\n\nWarning: unable to access index for repository http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.3:\n  cannot open URL 'http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.3/PACKAGES'\n\n\npackage 'igraph' successfully unpacked and MD5 sums checked\npackage 'tidygraph' successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n    C:\\Users\\willi\\AppData\\Local\\Temp\\RtmpETSE7e\\downloaded_packages\n\n\n\ntidygraph installed\n\n\nInstalling package into 'C:/Users/willi/AppData/Local/R/win-library/4.3'\n(as 'lib' is unspecified)\n\n\nalso installing the dependencies 'polyclip', 'ggforce', 'viridis', 'graphlayouts'\n\n\nWarning: unable to access index for repository http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.3:\n  cannot open URL 'http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.3/PACKAGES'\n\n\npackage 'polyclip' successfully unpacked and MD5 sums checked\npackage 'ggforce' successfully unpacked and MD5 sums checked\npackage 'viridis' successfully unpacked and MD5 sums checked\npackage 'graphlayouts' successfully unpacked and MD5 sums checked\npackage 'ggraph' successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n    C:\\Users\\willi\\AppData\\Local\\Temp\\RtmpETSE7e\\downloaded_packages\n\n\n\nggraph installed\n\n\nInstalling package into 'C:/Users/willi/AppData/Local/R/win-library/4.3'\n(as 'lib' is unspecified)\n\n\nWarning: unable to access index for repository http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.3:\n  cannot open URL 'http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.3/PACKAGES'\n\n\npackage 'visNetwork' successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n    C:\\Users\\willi\\AppData\\Local\\Temp\\RtmpETSE7e\\downloaded_packages\n\n\n\nvisNetwork installed\n\n\n\nMC1 &lt;- fromJSON(\"data/data_05/MC1.json\")\nMC1_nodes &lt;- as_tibble(MC1$nodes) %&gt;%\n  select(id, type, country)\nMc1_edges &lt;- as_tibble(MC1$links) %&gt;%\n  select(source, target, type, weight, key)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "About Me",
    "section": "",
    "text": "Wilson is currently working at the Housing & Development Board as a Senior Business Analyst by day. He is part of the Data Science Team under the Board’s Estate Administration & Property Group.\nBy night, he transforms into a part-time student pursuing a Master of Information Technology in Business at Singapore Management University. Beyond that, what little pockets of free time left is spent picking up tennis in an attempt to live up to his given name."
  },
  {
    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "About Me",
    "section": "Education",
    "text": "Education\nSingapore Management University\nMaster of Information Technology in Business | Aug 2021 - Present\nNational University of Singapore\nB. Soc. Sci in Economics with Honours (Highest Distinction) | Aug 2014 - Jul 2018\nPublished Honour’s Thesis\nDid the ASEAN-China Free Trade Area Actually Increase ASEAN Countries’ Exports to China?"
  },
  {
    "objectID": "index.html#experience",
    "href": "index.html#experience",
    "title": "About Me",
    "section": "Experience",
    "text": "Experience\nHousing & Development Board | Senior Business Analyst | Sep 2018 - present"
  },
  {
    "objectID": "take-home_ex/take-home_ex_01.html",
    "href": "take-home_ex/take-home_ex_01.html",
    "title": "Take-home Exercise 01",
    "section": "",
    "text": "The City of Engagement, with a total population of 50,000, is a small city located in the Country of Nowhere. The city serves as a service centre of an agriculture region surrounding the city. The main agriculture of the region is fruit farms and vineyards. The local council of the city is in the process of preparing the Local Plan 2023. A sample survey of 1000 representative residents had been conducted to collect data related to their household demographic and spending patterns, among other things. The city aims to use the data to assist with their major community revitalization efforts, including how to allocate a very large city renewal grant they have recently received."
  },
  {
    "objectID": "take-home_ex/take-home_ex_01.html#background",
    "href": "take-home_ex/take-home_ex_01.html#background",
    "title": "Take-home Exercise 01",
    "section": "",
    "text": "The City of Engagement, with a total population of 50,000, is a small city located in the Country of Nowhere. The city serves as a service centre of an agriculture region surrounding the city. The main agriculture of the region is fruit farms and vineyards. The local council of the city is in the process of preparing the Local Plan 2023. A sample survey of 1000 representative residents had been conducted to collect data related to their household demographic and spending patterns, among other things. The city aims to use the data to assist with their major community revitalization efforts, including how to allocate a very large city renewal grant they have recently received."
  },
  {
    "objectID": "take-home_ex/take-home_ex_01.html#data-preparation",
    "href": "take-home_ex/take-home_ex_01.html#data-preparation",
    "title": "Take-home Exercise 01",
    "section": "Data Preparation",
    "text": "Data Preparation\nThere are two datasets for this exercise:\n\nThe first one contains various demographic information of survey participants (Participants.csv)\nThe second contains various financial transactions of survey participants (FinancialJournal.csv)\n\n\n\n\n\n\n\nData description (click to view)\n\n\n\n\n\nParticipants.csv\nContains information about the residents of City of Engagement that have agreed to participate in this study.\n\nparticipantId (integer): unique ID assigned to each participant.\nhouseholdSize (integer): the number of people in the participant's household\nhaveKids (boolean): whether there are children living in the participant's household.\nage (integer): participant's age in years at the start of the study.\neducationLevel (string factor): the participant's education level, one of: {\"Low\", \"HighSchoolOrCollege\", \"Bachelors\", \"Graduate\"}\ninterestGroup (char): a char representing the participant's stated primary interest group, one of {\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\"}. Note: specific topics of interest have been redacted to avoid bias.\njoviality (float): a value ranging from [0,1] indicating the participant's overall happiness level at the start of the study.\n\nFinancialJournal.csv\nContains information about financial transactions.\n\nparticipantId (integer): unique ID corresponding to the participant affected\ntimestamp (datetime): the time when the check-in was logged\ncategory (string factor): a string describing the expense category, one of {\"Education\", \"Food\", \"Recreation\", \"RentAdjustment\", \"Shelter\", \"Wage\"}\namount (double): the amount of the transaction\n\n\n\n\nWhile importing the datasets, we will also ensure that the variables are of the correct type (e.g. character, numeric, integer):\n\nLoad datasets\n\np &lt;- read_csv(\"data/Participants.csv\",\n                     col_types = cols(\"i\", \"i\", \"l\", \"i\", \"c\", \"c\", \"d\"))\nif (any(is.na(p)) == FALSE) {\n  cat(\"Output:\", \"There are no missing values in Participants.csv\", \"\\n\")\n} else {\n  cat(\"Output:\", \"There are missing values in Participants.csv\", \"\\n\")\n}\np$educationLevel &lt;-\n  p$educationLevel %&gt;% ordered(levels =\n                                 c(\"Low\",\n                                   \"HighSchoolOrCollege\",\n                                   \"Bachelors\",\n                                   \"Graduate\")) # order of factors may be meaningful, so use ordered()\np_data &lt;- distinct(p) # remove any possible duplicate rows\n\nfin &lt;- read_csv(\"data/FinancialJournal.csv\",\n                     col_types = cols(\"i\", \"T\", \"c\", \"d\"))\nif (any(is.na(fin)) == FALSE) {\n  cat(\"Output:\", \"There are no missing values in FinancialJournal.csv\", \"\\n\")\n} else {\n  cat(\"Output:\", \"There are missing values in FinancialJournal.csv\", \"\\n\")\n}\nfin$category &lt;-\n  fin$category %&gt;% factor(levels =\n                            c(\"Education\",\n                              \"Food\",\n                              \"Recreation\",\n                              \"RentAdjustment\",\n                              \"Shelter\",\n                              \"Wage\"))\nfin_data &lt;- distinct(fin) # remove any possible duplicate rows\n\nOutput: There are no missing values in Participants.csv \nOutput: There are no missing values in FinancialJournal.csv \n\n\nThere were 0 (out of 1011) duplicate rows for Participants.csv and 1113 (out of 1513636) duplicate rows for FinancialJournal.csv. They have been removed.\n\n\n\n\n\n\nInformation about col_types\n\n\n\n“i” is for integer, “c” is for character, “l” is for logical, “d” is for double, “T” is for datetime.\n\n\nBefore we move on, let’s check if the financial journal is complete for all participants:\n\ncounts &lt;- fin_data %&gt;% group_by(participantId) %&gt;% summarise(n_obs = n())\n\nggplot(counts, aes(x = \"\", y = n_obs)) +\n  geom_boxplot(fill = \"#80b1d3\", outlier.shape = NA, width = 0.5) +\n  geom_jitter(width = 0.2, height = 0, alpha = 0.5, color = \"#FFA07A\") +\n  scale_y_continuous(expand = c(0.05, 0)) +\n  labs(title = \"Distribution of Financial Transactions per participantId\",\n       subtitle = \"Some participants have rather low numbers of financial transactions\\n(located at the bottom)\",\n       y = \"No. of financial transactions\",\n       x = \"\") +\n  theme_classic() +\n  theme(axis.line.x = element_blank(),\n        axis.text.x = element_blank(),\n        axis.ticks.x = element_blank(),\n        plot.title = element_text(face = \"bold\", size = 16),\n        plot.subtitle = element_text(size = 12))\n\n\n\n\nFor the group of participants that have rather low numbers of financial transactions, it could be due to exogenous reasons (e.g., data entry error, left the city, gave up on the study halfway). As such, they will be removed for the purposes of this analysis:\n\nnew_fin_data &lt;- counts %&gt;%\n  filter(n_obs &gt;= 500) %&gt;% # filter out participants with low no. of transactions\n  inner_join(fin_data, by = \"participantId\") %&gt;% # keep only relevant obs in fin_data\n  select(!contains(\"n_obs\")) # discard n_obs column\n\nThey will also be removed from the demographics dataset, since we are unsure if, for example, they have left the city for good.\n\nnew_p_data &lt;- counts %&gt;%\n  filter(n_obs &gt;= 500) %&gt;%\n  inner_join(p_data, by = \"participantId\") %&gt;%\n  select(!contains(\"n_obs\"))\n\n\n\n\n\n\n\nParticipants removed due to low number of check-ins in financial journal\n\n\n\nA total of 131 participants, out of the original 1011, were dropped from our datasets."
  },
  {
    "objectID": "take-home_ex/take-home_ex_01.html#getting-to-know-our-demographics-dataset",
    "href": "take-home_ex/take-home_ex_01.html#getting-to-know-our-demographics-dataset",
    "title": "Take-home Exercise 01",
    "section": "Getting to Know Our Demographics Dataset",
    "text": "Getting to Know Our Demographics Dataset\nThe City of Engagement has a population of 50,000. We have participants’ data with a sample size of 880, which should give us a decent representation of how the population looks like.\nFirstly, let’s perform some basic visualisations so that we can get to know our data better. Basic insights are provided in the subtitle of each plot.\n\nDemographics of Participants\n\nHousehold SizeKids?AgeEducation LevelInterest Group\n\n\n\n\nCode\n# Creating a data.frame containing the frequencies of householdSize in our dataset of 1,000 participants\nhs_counts &lt;- data.frame(table(new_p_data$householdSize))\ncolnames(hs_counts) &lt;- c(\"householdSize\", \"Freq\")\n\n# Adding a percentage variable based on the frequencies\nhs_counts$pct &lt;- percent(hs_counts$Freq / sum(hs_counts$Freq))\n\n# Choosing some nice colors for the plot\nnice_colors &lt;- c(\"#80b1d3\", \"#8dd3c7\", \"#bebada\")\n\n# Plotting (using coord_polar creates a pie chart from a stacked bar chart)\nggplot(hs_counts, aes(x = \"\", y = Freq, fill = factor(householdSize))) + \n  geom_bar(stat = \"identity\", width = 1, color = \"white\") +\n  geom_text(aes(label = pct), position = position_stack(vjust = 0.5)) +\n  coord_polar(\"y\", start = 0) +\n  labs(title = \"Household Size Distribution\",\n       subtitle = \"The most common household size is 1 and least common household size is 3.\",\n       fill = \"Household Size\") +\n  theme_void() +\n  scale_fill_manual(values = nice_colors, guide = guide_legend(reverse = TRUE)) +\n  theme(plot.title = element_text(face = \"bold\", size = 16),\n        plot.subtitle = element_text(size = 12))\n\n\n\n\n\n\n\n\n\nCode\n# Creating a data.frame containing the frequencies of haveKids in our dataset of 1,000 participants\nkids_counts &lt;- data.frame(table(new_p_data$haveKids))\ncolnames(kids_counts) &lt;- c(\"haveKids\", \"Freq\")\n\n# Adding a percentage variable based on the frequencies\nkids_counts$pct &lt;- percent(kids_counts$Freq / sum(kids_counts$Freq))\n\n# Choosing some nice colors for the plot\nnice_colors &lt;- c(\"#80b1d3\", \"#8dd3c7\")\n\n# Plotting (using coord_polar creates a pie chart from a stacked bar chart)\nggplot(kids_counts, aes(x = \"\", y = Freq, fill = factor(haveKids))) + \n  geom_bar(stat = \"identity\", width = 1, color = \"white\") +\n  geom_text(aes(label = pct), position = position_stack(vjust = 0.5)) +\n  coord_polar(\"y\", start = 0) +\n  labs(title = \"Distribution of Whether Participants Have Kids\",\n       subtitle = \"Most participants do not have kids. Only slightly less than a third have kids.\",\n       fill = \"Do participants have kids?\") +\n  theme_void() +\n  scale_fill_manual(values = nice_colors, guide = guide_legend(reverse = TRUE)) +\n  theme(plot.title = element_text(face = \"bold\", size = 16),\n        plot.subtitle = element_text(size = 12))\n\n\n\n\n\n\n\n\n\nCode\n# Calculate the mean, min, and max age\nmean_age &lt;- mean(new_p_data$age)\nmin_age &lt;- min(new_p_data$age)\nmax_age &lt;- max(new_p_data$age)\n\n# Choosing some nice colors for the plot\nnice_colors &lt;- c(\"#80b1d3\", \"#8dd3c7\", \"#bebada\", \"#fccde5\")\n\n# Plotting\nggplot(new_p_data, aes(x = age)) + \n  geom_histogram(breaks = c(18, 30, 40, 50, 60), fill = nice_colors, color = \"white\") +\n  labs(title = \"Age Distribution\",\n       subtitle = \"Participants are relatively evenly distributed across age groups.\",\n       x = \"Age\",\n       y = \"Counts\",\n       caption = \"Note:\\nFor geom_histogram(), all bins are left-inclusive and right-exclusive by default, except the rightmost bin,\\nwhich is both left and right-inclusive.\\nThe leftmost and rightmost bins have a larger binwidth of 12 and 11 years respectively, compared to the\\nmiddle two bins with binwidths of 10 years. Though not ideal for comparison, they are intuitive.\") +\n  theme_bw() +\n  theme(plot.title = element_text(face = \"bold\", size = 16),\n        plot.subtitle = element_text(size = 12),\n        plot.caption = element_text(size = 9.5, hjust = 0)) +\n  geom_vline(xintercept = mean_age, color = \"darkred\", linetype = \"dashed\") +\n  geom_vline(xintercept = min_age, color = \"darkred\", linetype = \"dashed\") +\n  geom_vline(xintercept = max_age, color = \"darkred\", linetype = \"dashed\") +\n  annotate(\"text\", x = mean_age + 4.2, y = 40, label = paste(\"Mean age:\", round(mean_age, 1)), color = \"darkred\") +\n  annotate(\"text\", x = min_age + 3.5, y = 40, label = paste(\"Min. age:\", round(min_age, 1)), color = \"darkred\") +\n  annotate(\"text\", x = max_age - 4, y = 40, label = paste(\"Max. age:\", round(max_age, 1)), color = \"darkred\") +\n  geom_text(aes(x = 23.5, y = 150, label = \"18-29\\nyears old\"), size = 3.5) +\n  geom_text(aes(x = 34, y = 150, label = \"30-39\\nyears old\"), size = 3.5) +\n  geom_text(aes(x = 44, y = 150, label = \"40-49\\nyears old\"), size = 3.5) +\n  geom_text(aes(x = 54.5, y = 150, label = \"50-60\\nyears old\"), size = 3.5) +\n  scale_y_continuous(breaks = breaks_width(50)) # this useful function is from the 'scales' package\n\n\n\n\n\n\n\n\n\nCode\n# Creating a data.frame containing the frequencies of educationLevel in our dataset of 1,000 participants\nedu_counts &lt;- data.frame(table(new_p_data$educationLevel))\ncolnames(edu_counts) &lt;- c(\"educationLevel\", \"Counts\")\n\n# Adding a percentage variable based on the frequencies\nedu_counts$pct &lt;- percent(edu_counts$Counts / sum(edu_counts$Counts))\n\n# Choosing some nice colors for the plot\nnice_colors &lt;- c(\"#80b1d3\", \"#8dd3c7\", \"#bebada\", \"#fccde5\")\n\n# Plot\nggplot(edu_counts, aes(x = educationLevel, y = Counts)) +\n  geom_bar(stat = \"identity\", fill = nice_colors, color = \"white\") +\n  labs(title = \"Education Level Distribution\", x = \"Education Level\", y = \"Counts\",\n       subtitle = \"This city is rather well-educated.\\n93.7% of participants have education higher than 'High School/College'.\\n45.7% have education higher than Bachelor's degree.\") +\n  theme_bw() +\n  theme(plot.title = element_text(face = \"bold\", size = 16),\n        plot.subtitle = element_text(size = 12)) +\n  geom_text(aes(label = pct), vjust = 1.5)\n\n\n\n\n\n\n\n\n\nCode\n# Creating a data.frame containing the frequencies of interestGroup in our dataset of 1,000 participants\ninterest_counts &lt;- data.frame(table(new_p_data$interestGroup))\ncolnames(interest_counts) &lt;- c(\"interestGroup\", \"Counts\")\n\n# Adding a percentage variable based on the frequencies\ninterest_counts$pct &lt;- percent(interest_counts$Counts / sum(interest_counts$Counts), accuracy = 0.1)\n\n# Plot\nggplot(interest_counts, aes(x = reorder(interestGroup, -Counts), y = Counts)) +\n  geom_bar(stat = \"identity\", fill = \"#80b1d3\", color = \"white\") +\n  labs(title = \"Interest Group Distribution\", x = \"Interest Group\", y = \"Counts\",\n       subtitle = \"Most common interest among participants is 'J', and least common interest is 'E'.\") +\n  theme_bw() +\n  theme(plot.title = element_text(face = \"bold\", size = 16),\n        plot.subtitle = element_text(size = 12)) +\n  geom_text(aes(label = pct), vjust = 1.5)"
  },
  {
    "objectID": "take-home_ex/take-home_ex_01.html#more-data-preparation---group-data",
    "href": "take-home_ex/take-home_ex_01.html#more-data-preparation---group-data",
    "title": "Take-home Exercise 01",
    "section": "More Data Preparation - Group Data",
    "text": "More Data Preparation - Group Data\nLet’s take a look at the length (no. of rows) of our new_fin_data, which is the financial journal for our 880 participants:\n\ncat(\"Output:\", \"There are\", nrow(new_fin_data), \"rows\", \"in our dataset.\", \"\\n\")\n\nOutput: There are 1509897 rows in our dataset. \n\n\nThis is rather large and it is due to the fact that each participant can have multiple transactions across different categories. To make the dataset more manageable without losing our ability to conduct meaningful analysis, we could extract the Month-Year from timestamp column that records the date and time of each record in POSIXct format. After extracting the Month-Year (as month_year), we will sum the total transaction amounts by participantId, category, and month_year:\n\ngrouped_data &lt;-\n  new_fin_data %&gt;%\n  mutate(month_year = floor_date(timestamp, \"month\")) %&gt;%\n  group_by(participantId, category, month_year) %&gt;%\n  summarise(total_amount = sum(amount)) %&gt;%\n  arrange(participantId, month_year) # sort by ascending\n\n\nhead(grouped_data, 10)\n\n# A tibble: 10 × 4\n# Groups:   participantId, category [5]\n   participantId category   month_year          total_amount\n           &lt;int&gt; &lt;fct&gt;      &lt;dttm&gt;                     &lt;dbl&gt;\n 1             0 Education  2022-03-01 00:00:00        -38.0\n 2             0 Food       2022-03-01 00:00:00       -268. \n 3             0 Recreation 2022-03-01 00:00:00       -349. \n 4             0 Shelter    2022-03-01 00:00:00       -555. \n 5             0 Wage       2022-03-01 00:00:00      11932. \n 6             0 Education  2022-04-01 00:00:00        -38.0\n 7             0 Food       2022-04-01 00:00:00       -266. \n 8             0 Recreation 2022-04-01 00:00:00       -219. \n 9             0 Shelter    2022-04-01 00:00:00       -555. \n10             0 Wage       2022-04-01 00:00:00       8637. \n\n\nWith this grouped dataset, we can clearly see the expenditure/income for each participant, category, and month-year.\n\ncat(\"Output:\", \"There are\", nrow(grouped_data), \"rows\", \"in our new dataset.\", \"\\n\")\n\nOutput: There are 44208 rows in our new dataset. \n\n\nThis is a much smaller dataset, which is more manageable, while still providing insights at the monthly interval.\n\ngrouped_more_data &lt;-\n  group_by(grouped_data, category, month_year) %&gt;%\n  reframe(total_amount = sum(total_amount)) %&gt;%\n  arrange(month_year)\n\nggplot(data = grouped_more_data, aes(x = month_year, y = total_amount)) +\n  geom_line(color = \"steelblue\") +\n  facet_wrap(~category, scales = \"free_y\", nrow = 3, ncol = 2) +\n  labs(x = \"Month-Year\", y = \"Total Amount\") +\n  theme_bw()"
  },
  {
    "objectID": "take-home_ex/take-home_ex_01.html#getting-to-know-our-financial-journal-dataset",
    "href": "take-home_ex/take-home_ex_01.html#getting-to-know-our-financial-journal-dataset",
    "title": "Take-home Exercise 01",
    "section": "Getting to Know Our Financial Journal Dataset",
    "text": "Getting to Know Our Financial Journal Dataset\nLet’s take a look at the length (no. of rows) of our new_fin_data, which is the financial journal for our 880 participants:\n\ncat(\"Output:\", \"There are\", nrow(new_fin_data), \"rows\", \"in our dataset.\", \"\\n\")\n\nOutput: There are 1509897 rows in our dataset. \n\n\nThis is rather large and it is due to the fact that each participant can have multiple transactions across different categories. To make the dataset more manageable without losing our ability to conduct meaningful analysis, we could extract the Month-Year from timestamp column that records the date and time of each record in POSIXct format. After extracting the Month-Year (as month_year), we will sum the total transaction amounts by participantId, category, and month_year:\n\ngrouped_data &lt;-\n  new_fin_data %&gt;%\n  mutate(month_year = floor_date(timestamp, \"month\")) %&gt;%\n  group_by(participantId, category, month_year) %&gt;%\n  summarise(total_amount = sum(amount)) %&gt;%\n  arrange(participantId, month_year) # sort by ascending\n\n\nhead(grouped_data, 10)\n\n# A tibble: 10 × 4\n# Groups:   participantId, category [5]\n   participantId category   month_year          total_amount\n           &lt;int&gt; &lt;fct&gt;      &lt;dttm&gt;                     &lt;dbl&gt;\n 1             0 Education  2022-03-01 00:00:00        -38.0\n 2             0 Food       2022-03-01 00:00:00       -268. \n 3             0 Recreation 2022-03-01 00:00:00       -349. \n 4             0 Shelter    2022-03-01 00:00:00       -555. \n 5             0 Wage       2022-03-01 00:00:00      11932. \n 6             0 Education  2022-04-01 00:00:00        -38.0\n 7             0 Food       2022-04-01 00:00:00       -266. \n 8             0 Recreation 2022-04-01 00:00:00       -219. \n 9             0 Shelter    2022-04-01 00:00:00       -555. \n10             0 Wage       2022-04-01 00:00:00       8637. \n\n\nWith this grouped dataset, we can clearly see the expenditure/income for each participant, category, and month-year.\n\ncat(\"Output:\", \"There are\", nrow(grouped_data), \"rows\", \"in our new dataset.\", \"\\n\")\n\nOutput: There are 44208 rows in our new dataset. \n\n\nThis is a much smaller dataset, which is more manageable, while still providing insights at the monthly interval.\nLet’s explore the Financial Journal data over time to see if there are any trends. We will do this by plotting the mean, maximum, and minimum total_amount earned/spent from all participants, grouped by category and month_year, over month_year.\n\n\nCode\n# Calculate the mean, minimum, and maximum total_amount over all participantId for each category\ngrouped_data_summary &lt;- grouped_data %&gt;%\n  group_by(category, month_year) %&gt;%\n  summarise(mean_total_amount = mean(abs(total_amount)),\n            min_total_amount = min(abs(total_amount)),\n            max_total_amount = max(abs(total_amount)))\n\n# Create a time series plot with mean, min, and max for each category using facets\nggplot(grouped_data_summary, aes(x = month_year, y = mean_total_amount, color = category)) +\n  geom_line() +\n  geom_ribbon(aes(ymin = min_total_amount, ymax = max_total_amount, fill = category), alpha = 0.3) +\n  labs(x = \"Month/Year\", y = \"Amount ($)\",\n       title = \"Mean/Max/Min Amount by Category over Time\",\n       subtitle = \"RentAdjustment and Wage are earnings, the rest are expenses\") +\n  scale_fill_discrete(name = \"Category\") +\n  scale_color_discrete(name = \"Category\") +\n  theme_bw() +\n  facet_wrap(~category, nrow = 3, scales = \"free_y\") +\n  guides(color = \"none\", fill = \"none\") +\n  scale_x_datetime(date_minor_breaks = \"1 month\", date_labels = \"%b-%Y\")\n\n\n\n\n\nWe can see that the mean, minimum, and maximum amounts for each category is relatively stable over time. The exceptions are:\n\nShelter and RentAdjustment experience ‘shocks’ on Mar-2022, and the effects linger for a month until Apr-2022, after which Shelter stabilises while RentAdjustment becomes zero.\nMinor ‘shock’ for Wage on Mar-2022 as well.\nHigh volatility for the maximum amount spent on Recreation over time. This makes sense as it is most likely spending on luxury items, as compared to the other expense categories, which are more like necessities (e.g., Education, Food, Shelter).\n\nSince most of the time series are relatively stable, we can move on to conduct our analysis on aggregated data (aggregated over time). This removes one dimension from the analysis, making it less complicated."
  },
  {
    "objectID": "take-home_ex/take-home_ex_01.html#aggregating-financial-journal-data-over-time-and-merging-datasets",
    "href": "take-home_ex/take-home_ex_01.html#aggregating-financial-journal-data-over-time-and-merging-datasets",
    "title": "Take-home Exercise 01",
    "section": "Aggregating Financial Journal Data over Time and Merging Datasets",
    "text": "Aggregating Financial Journal Data over Time and Merging Datasets\nWe will take the mean of total_amount over month_year to obtain mean monthly amounts earned/spent by each participant for each category. We will not include RentAdjustment as it seems like a one-off occurrence.\n\naggregated_data &lt;- grouped_data %&gt;%\n  group_by(participantId, category) %&gt;%\n  summarise(monthly_total_amount = mean(total_amount))\nhead(aggregated_data)\n\n# A tibble: 6 × 3\n# Groups:   participantId [2]\n  participantId category   monthly_total_amount\n          &lt;int&gt; &lt;fct&gt;                     &lt;dbl&gt;\n1             0 Education                 -38.0\n2             0 Food                     -262. \n3             0 Recreation               -365. \n4             0 Shelter                  -555. \n5             0 Wage                     9151. \n6             1 Education                 -38.0\n\n\nLet’s merge this aggregated data with the demographics dataset so that we can see the earnings/expense by demographics:\n\nmerged_data &lt;- inner_join(aggregated_data, new_p_data, by = \"participantId\")\nhead(merged_data)\n\n# A tibble: 6 × 9\n# Groups:   participantId [2]\n  participantId category   monthly_total_amount householdSize haveKids   age\n          &lt;int&gt; &lt;fct&gt;                     &lt;dbl&gt;         &lt;int&gt; &lt;lgl&gt;    &lt;int&gt;\n1             0 Education                 -38.0             3 TRUE        36\n2             0 Food                     -262.              3 TRUE        36\n3             0 Recreation               -365.              3 TRUE        36\n4             0 Shelter                  -555.              3 TRUE        36\n5             0 Wage                     9151.              3 TRUE        36\n6             1 Education                 -38.0             3 TRUE        25\n# ℹ 3 more variables: educationLevel &lt;ord&gt;, interestGroup &lt;chr&gt;,\n#   joviality &lt;dbl&gt;"
  },
  {
    "objectID": "take-home_ex/take-home_ex_01.html#who-spends-on-education",
    "href": "take-home_ex/take-home_ex_01.html#who-spends-on-education",
    "title": "Take-home Exercise 01",
    "section": "Who Spends on Education?",
    "text": "Who Spends on Education?\nIntuitively, households with children should spend the most on education. In this section, we will see from the data whether this is really the case.\n\nHousehold SizeKids?Education\n\n\n\n\nCode\ntmp &lt;- merged_data %&gt;%\n  filter(category == \"Education\") %&gt;%\n  group_by(householdSize) %&gt;%\n  summarise(average_monthly_amount = mean(monthly_total_amount))\ntmp\ncat(\"\\n\", \"Only those with householdSize = 3 spend on education, which makes sense since kids are present in households of size 3.\", \"\\n\")\n\n\n# A tibble: 1 × 2\n  householdSize average_monthly_amount\n          &lt;int&gt;                  &lt;dbl&gt;\n1             3                  -46.2\n\n Only those with householdSize = 3 spend on education, which makes sense since kids are present in households of size 3. \n\n\n\n\n\n\nCode\ntmp &lt;- merged_data %&gt;%\n  filter(category == \"Education\") %&gt;%\n  group_by(haveKids) %&gt;%\n  summarise(average_monthly_amount = mean(monthly_total_amount))\ntmp\n\n\n# A tibble: 1 × 2\n  haveKids average_monthly_amount\n  &lt;lgl&gt;                     &lt;dbl&gt;\n1 TRUE                      -46.2\n\n\n\n\n\n\nCode\ntmp &lt;- merged_data %&gt;%\n  filter(category == \"Education\") %&gt;%\n  group_by(educationLevel) %&gt;%\n  summarise(average_monthly_amount = mean(monthly_total_amount))\n\nggplot(tmp, aes(x = educationLevel, y = abs(average_monthly_amount))) +\n  geom_bar(stat = \"identity\", fill = \"steelblue\") +\n  labs(title = \"Average Monthly Amount Spent on Education by Education Level\",\n       subtitle = \"Graduates spend the most on education.\",\n       x = \"\\nEducation Level\",\n       y = \"Average Monthly Amount\\nSpent on Education ($)\\n\") +\n  theme_bw() +\n  theme(plot.title = element_text(face = \"bold\", size = 14),\n        plot.subtitle = element_text(size = 12))"
  },
  {
    "objectID": "take-home_ex/take-home_ex_01.html#who-spends-most-on-education",
    "href": "take-home_ex/take-home_ex_01.html#who-spends-most-on-education",
    "title": "Take-home Exercise 01",
    "section": "Who Spends Most on Education?",
    "text": "Who Spends Most on Education?\nIntuitively, households with children should spend the most on education. In this section, we will see from the data whether this is really the case.\nThe following plots show the monthly amount spent on Education when grouped by the respective variables:\n\nHousehold SizeKids?Education Level\n\n\n\n\nCode\ntmp &lt;- merged_data %&gt;%\n  filter(category == \"Education\") %&gt;%\n  group_by(householdSize) %&gt;%\n  summarise(average_monthly_amount = mean(monthly_total_amount))\ntmp\ncat(\"\\n\", \"Only those with householdSize = 3 spend on education, which makes sense since kids are present in households of size 3.\", \"\\n\")\n\n\n# A tibble: 1 × 2\n  householdSize average_monthly_amount\n          &lt;int&gt;                  &lt;dbl&gt;\n1             3                  -46.2\n\n Only those with householdSize = 3 spend on education, which makes sense since kids are present in households of size 3. \n\n\n\n\n\n\nCode\ntmp &lt;- merged_data %&gt;%\n  filter(category == \"Education\") %&gt;%\n  group_by(haveKids) %&gt;%\n  summarise(average_monthly_amount = mean(monthly_total_amount))\ntmp\ncat(\"\\n\", \"Only those who have kids will spend on education\", \"\\n\")\n\n\n# A tibble: 1 × 2\n  haveKids average_monthly_amount\n  &lt;lgl&gt;                     &lt;dbl&gt;\n1 TRUE                      -46.2\n\n Only those who have kids will spend on education \n\n\n\n\n\n\nCode\ntmp &lt;- merged_data %&gt;%\n  filter(category == \"Education\") %&gt;%\n  group_by(educationLevel) %&gt;%\n  summarise(average_monthly_amount = mean(monthly_total_amount))\n\nggplot(tmp, aes(x = educationLevel, y = abs(average_monthly_amount))) +\n  geom_bar(stat = \"identity\", fill = \"#80b1d3\") +\n  labs(title = \"Average Monthly Amount Spent on Education by Education Level\",\n       subtitle = \"Graduates spend the most on education.\",\n       x = \"\\nEducation Level\",\n       y = \"Average Monthly Amount\\nSpent on Education ($)\\n\") +\n  theme_bw() +\n  theme(plot.title = element_text(face = \"bold\", size = 14),\n        plot.subtitle = element_text(size = 12))\n\n\n\n\n\n\n\n\nConclusions:\n\nConfirmed that only households with kids spend on education.\nGraduates spend the most on education, though not by far."
  },
  {
    "objectID": "take-home_ex/take-home_ex_01.html#who-spends-most-on-food",
    "href": "take-home_ex/take-home_ex_01.html#who-spends-most-on-food",
    "title": "Take-home Exercise 01",
    "section": "Who Spends Most on Food?",
    "text": "Who Spends Most on Food?\nThe following plots show the monthly amount spent on Food when grouped by the respective variables:\n\nHousehold SizeKids?AgeEducation LevelEducation Level\n\n\n\n\nCode\ntmp &lt;- merged_data %&gt;%\n  filter(category == \"Food\") %&gt;%\n  group_by(householdSize) %&gt;%\n  summarise(average_monthly_amount = mean(monthly_total_amount))\n\nggplot(tmp, aes(x = householdSize, y = abs(average_monthly_amount))) +\n  geom_bar(stat = \"identity\", fill = \"#80b1d3\") +\n  labs(title = \"Average Monthly Amount Spent on Food by Household Size\",\n       subtitle = \"Surprisingly, Household Size and Amount Spent on Food are not positively correlated\",\n       x = \"\\nHousehold Size\",\n       y = \"Average Monthly Amount\\nSpent on Food ($)\\n\") +\n  theme_bw() +\n  theme(plot.title = element_text(face = \"bold\", size = 14),\n        plot.subtitle = element_text(size = 11.5))\n\n\n\n\n\n\n\n\n\nCode\ntmp &lt;- merged_data %&gt;%\n  filter(category == \"Food\") %&gt;%\n  group_by(haveKids) %&gt;%\n  summarise(average_monthly_amount = mean(monthly_total_amount))\n\nggplot(tmp, aes(x = haveKids, y = abs(average_monthly_amount))) +\n  geom_bar(stat = \"identity\", fill = \"#80b1d3\") +\n  labs(title = \"Average Monthly Amount Spent on Food by Presence of Kids\",\n       subtitle = \"Presence of kids does not affect amount spent on food\",\n       x = \"\\nParticipants have kids?\",\n       y = \"Average Monthly Amount\\nSpent on Food ($)\\n\") +\n  theme_bw() +\n  theme(plot.title = element_text(face = \"bold\", size = 14),\n        plot.subtitle = element_text(size = 12))\n\n\n\n\n\n\n\n\n\nCode\nmerged_data$ageGroup &lt;- cut(merged_data$age,\n                            breaks = c(0, 29, 39, 49, Inf),\n                            labels = c(\"18-29\", \"30-39\", \"40-49\", \"50-60\"))\n\ntmp &lt;- merged_data %&gt;%\n  filter(category == \"Food\") %&gt;%\n  group_by(ageGroup) %&gt;%\n  summarise(average_monthly_amount = mean(monthly_total_amount))\n\nggplot(tmp, aes(x = ageGroup, y = abs(average_monthly_amount))) +\n  geom_bar(stat = \"identity\", fill = \"#80b1d3\") +\n  labs(title = \"Average Monthly Amount Spent on Food by Age Group\",\n       subtitle = \"Age does not seem to affect amount spent on food.\",\n       x = \"\\nAge Group\",\n       y = \"Average Monthly Amount\\nSpent on Food ($)\\n\") +\n  theme_bw() +\n  theme(plot.title = element_text(face = \"bold\", size = 14),\n        plot.subtitle = element_text(size = 12))\n\n\n\n\n\n\n\n\n\nCode\ntmp &lt;- merged_data %&gt;%\n  filter(category == \"Food\") %&gt;%\n  group_by(educationLevel) %&gt;%\n  summarise(average_monthly_amount = mean(monthly_total_amount))\n\nggplot(tmp, aes(x = educationLevel, y = abs(average_monthly_amount))) +\n  geom_bar(stat = \"identity\", fill = \"#80b1d3\") +\n  labs(title = \"Average Monthly Amount Spent on Food by Education Level\",\n       subtitle = \"Slight positive correlation between education level and amount spent on food.\",\n       x = \"\\nEducation Level\",\n       y = \"Average Monthly Amount\\nSpent on Food ($)\\n\") +\n  theme_bw() +\n  theme(plot.title = element_text(face = \"bold\", size = 14),\n        plot.subtitle = element_text(size = 12))\n\n\n\n\n\n\n\n\n\nCode\ntmp &lt;- merged_data %&gt;%\n  filter(category == \"Food\") %&gt;%\n  group_by(educationLevel) %&gt;%\n  summarise(average_monthly_amount = mean(monthly_total_amount))\n\nggplot(tmp, aes(x = educationLevel, y = abs(average_monthly_amount))) +\n  geom_bar(stat = \"identity\", fill = \"#80b1d3\") +\n  labs(title = \"Average Monthly Amount Spent on Food by Education Level\",\n       subtitle = \"Slight positive correlation between education level and amount spent on food.\",\n       x = \"\\nEducation Level\",\n       y = \"Average Monthly Amount\\nSpent on Food ($)\\n\") +\n  theme_bw() +\n  theme(plot.title = element_text(face = \"bold\", size = 14),\n        plot.subtitle = element_text(size = 12))\n\n\n\n\n\n\n\n\nConclusions:\n\nhouseholdSize and haveKids do not appear to affect how much is spent monthly on food, which is quite puzzling. Could it be the case that household members eat less to accommodate a larger family?\neducationLevel shows a slight positive correlation with amount spent monthly on food (based on the plot). However, a caveat is that educationLevel may also be positively correlated with wage. This will be explored further later on."
  },
  {
    "objectID": "take-home_ex/take-home_ex_01.html#who-spends-most-on-recreation",
    "href": "take-home_ex/take-home_ex_01.html#who-spends-most-on-recreation",
    "title": "Take-home Exercise 01",
    "section": "Who Spends Most on Recreation?",
    "text": "Who Spends Most on Recreation?\nThe following plots show the monthly amount spent on Recreation when grouped by the respective variables:\n\nHousehold SizeKids?AgeEducation LevelInterest Group\n\n\n\n\nCode\ntmp &lt;- merged_data %&gt;%\n  filter(category == \"Recreation\") %&gt;%\n  group_by(householdSize) %&gt;%\n  summarise(average_monthly_amount = mean(monthly_total_amount))\n\nggplot(tmp, aes(x = householdSize, y = abs(average_monthly_amount))) +\n  geom_bar(stat = \"identity\", fill = \"#80b1d3\") +\n  labs(title = \"Average Monthly Amount Spent on Recreation by Household Size\",\n       subtitle = \"Slight increase in spending on recreation when household size increases\",\n       x = \"\\nHousehold Size\",\n       y = \"Average Monthly Amount\\nSpent on Recreation ($)\\n\") +\n  theme_bw() +\n  theme(plot.title = element_text(face = \"bold\", size = 14),\n        plot.subtitle = element_text(size = 12))\n\n\n\n\n\n\n\n\n\nCode\ntmp &lt;- merged_data %&gt;%\n  filter(category == \"Recreation\") %&gt;%\n  group_by(haveKids) %&gt;%\n  summarise(average_monthly_amount = mean(monthly_total_amount))\n\nggplot(tmp, aes(x = haveKids, y = abs(average_monthly_amount))) +\n  geom_bar(stat = \"identity\", fill = \"#80b1d3\") +\n  labs(title = \"Average Monthly Amount Spent on Recreation by Presence of Kids\",\n       subtitle = \"Slight increase in spending on recreation when participants have kids.\",\n       x = \"\\nParticipants have kids?\",\n       y = \"Average Monthly Amount\\nSpent on Recreation ($)\\n\") +\n  theme_bw() +\n  theme(plot.title = element_text(face = \"bold\", size = 14),\n        plot.subtitle = element_text(size = 12))\n\n\n\n\n\n\n\n\n\nCode\ntmp &lt;- merged_data %&gt;%\n  filter(category == \"Recreation\") %&gt;%\n  group_by(ageGroup) %&gt;%\n  summarise(average_monthly_amount = mean(monthly_total_amount))\n\nggplot(tmp, aes(x = ageGroup, y = abs(average_monthly_amount))) +\n  geom_bar(stat = \"identity\", fill = \"#80b1d3\") +\n  labs(title = \"Average Monthly Amount Spent on Recreation by Age Group\",\n       subtitle = \"Roughly equal spending on recreation across age groups.\",\n       x = \"\\nAge Group\",\n       y = \"Average Monthly Amount\\nSpent on Recreation ($)\\n\") +\n  theme_bw() +\n  theme(plot.title = element_text(face = \"bold\", size = 14),\n        plot.subtitle = element_text(size = 12))\n\n\n\n\n\n\n\n\n\nCode\ntmp &lt;- merged_data %&gt;%\n  filter(category == \"Recreation\") %&gt;%\n  group_by(educationLevel) %&gt;%\n  summarise(average_monthly_amount = mean(monthly_total_amount))\n\nggplot(tmp, aes(x = educationLevel, y = abs(average_monthly_amount))) +\n  geom_bar(stat = \"identity\", fill = \"#80b1d3\") +\n  labs(title = \"Average Monthly Amount Spent on Recreation by Education Level\",\n       subtitle = \"Roughly equal spending on recreation across education levels.\",\n       x = \"\\nEducation Level\",\n       y = \"Average Monthly Amount\\nSpent on Recreation ($)\\n\") +\n  theme_bw() +\n  theme(plot.title = element_text(face = \"bold\", size = 14),\n        plot.subtitle = element_text(size = 12))\n\n\n\n\n\n\n\n\n\nCode\ntmp &lt;- merged_data %&gt;%\n  filter(category == \"Recreation\") %&gt;%\n  group_by(interestGroup) %&gt;%\n  summarise(average_monthly_amount = mean(monthly_total_amount))\n\nggplot(tmp, aes(x = reorder(interestGroup, -abs(average_monthly_amount)), y = abs(average_monthly_amount))) +\n  geom_bar(stat = \"identity\", fill = \"#80b1d3\") +\n  labs(title = \"Average Monthly Amount Spent on Recreation by Interest Group\",\n       subtitle = \"Slight differences in spending on recreation across interest groups.\\nCould some interest groups be more expensive than the others?\",\n       x = \"\\nInterest Group\",\n       y = \"Average Monthly Amount\\nSpent on Recreation ($)\\n\") +\n  theme_bw() +\n  theme(plot.title = element_text(face = \"bold\", size = 14),\n        plot.subtitle = element_text(size = 12))\n\n\n\n\n\n\n\n\nConclusions:\n\nSlight increases in spending on recreation when householdSize increases and when haveKids is true.\nSome interest groups may cost more than the others. However, it is difficult to ascertain, based on the data, whether spending on recreation equates to spending on interest groups."
  },
  {
    "objectID": "take-home_ex/take-home_ex_01.html#who-spends-most-on-shelter",
    "href": "take-home_ex/take-home_ex_01.html#who-spends-most-on-shelter",
    "title": "Take-home Exercise 01",
    "section": "Who Spends Most on Shelter?",
    "text": "Who Spends Most on Shelter?\nThe following plots show the monthly amount spent on Shelter when grouped by the respective variables:\n\nHousehold SizeKids?AgeEducation Level\n\n\n\n\nCode\ntmp &lt;- merged_data %&gt;%\n  filter(category == \"Shelter\") %&gt;%\n  group_by(householdSize) %&gt;%\n  summarise(average_monthly_amount = mean(monthly_total_amount))\n\nggplot(tmp, aes(x = householdSize, y = abs(average_monthly_amount))) +\n  geom_bar(stat = \"identity\", fill = \"#80b1d3\") +\n  labs(title = \"Average Monthly Amount Spent on Shelter by Household Size\",\n       subtitle = \"Larger households spend a lot more on shelter as compared to singles.\",\n       x = \"\\nHousehold Size\",\n       y = \"Average Monthly Amount\\nSpent on Shelter ($)\\n\") +\n  theme_bw() +\n  theme(plot.title = element_text(face = \"bold\", size = 14),\n        plot.subtitle = element_text(size = 12))\n\n\n\n\n\n\n\n\n\nCode\ntmp &lt;- merged_data %&gt;%\n  filter(category == \"Shelter\") %&gt;%\n  group_by(haveKids) %&gt;%\n  summarise(average_monthly_amount = mean(monthly_total_amount))\n\nggplot(tmp, aes(x = haveKids, y = abs(average_monthly_amount))) +\n  geom_bar(stat = \"identity\", fill = \"#80b1d3\") +\n  labs(title = \"Average Monthly Amount Spent on Shelter by Presence of Kids\",\n       subtitle = \"Participants who have kids spend more on shelter.\",\n       x = \"\\nParticipants have kids?\",\n       y = \"Average Monthly Amount\\nSpent on Shelter ($)\\n\") +\n  theme_bw() +\n  theme(plot.title = element_text(face = \"bold\", size = 14),\n        plot.subtitle = element_text(size = 12))\n\n\n\n\n\n\n\n\n\nCode\ntmp &lt;- merged_data %&gt;%\n  filter(category == \"Shelter\") %&gt;%\n  group_by(ageGroup) %&gt;%\n  summarise(average_monthly_amount = mean(monthly_total_amount))\n\nggplot(tmp, aes(x = ageGroup, y = abs(average_monthly_amount))) +\n  geom_bar(stat = \"identity\", fill = \"#80b1d3\") +\n  labs(title = \"Average Monthly Amount Spent on Shelter by Age Group\",\n       subtitle = \"Roughly equal spending on shelter across age groups.\",\n       x = \"\\nAge Group\",\n       y = \"Average Monthly Amount\\nSpent on Shelter ($)\\n\") +\n  theme_bw() +\n  theme(plot.title = element_text(face = \"bold\", size = 14),\n        plot.subtitle = element_text(size = 12))\n\n\n\n\n\n\n\n\n\nCode\ntmp &lt;- merged_data %&gt;%\n  filter(category == \"Shelter\") %&gt;%\n  group_by(educationLevel) %&gt;%\n  summarise(average_monthly_amount = mean(monthly_total_amount))\n\nggplot(tmp, aes(x = educationLevel, y = abs(average_monthly_amount))) +\n  geom_bar(stat = \"identity\", fill = \"#80b1d3\") +\n  labs(title = \"Average Monthly Amount Spent on Shelter by Education Level\",\n       subtitle = \"Spending on shelter increases as education level increases.\",\n       x = \"\\nEducation Level\",\n       y = \"Average Monthly Amount\\nSpent on Shelter ($)\\n\") +\n  theme_bw() +\n  theme(plot.title = element_text(face = \"bold\", size = 14),\n        plot.subtitle = element_text(size = 12))\n\n\n\n\n\n\n\n\nConclusions:\n\nBoth householdSize &gt; 1 and haveKids = TRUE lead to an observed increase in spending on shelter. This makes sense, as a larger household requires more living space.\neducationLevel shows a positive correlation with amount spent monthly on shelter (based on the plot, similar to the case for food). However, a caveat is that educationLevel may also be positively correlated with wage. This will be explored further later on."
  },
  {
    "objectID": "take-home_ex/take-home_ex_01.html#who-earns-most",
    "href": "take-home_ex/take-home_ex_01.html#who-earns-most",
    "title": "Take-home Exercise 01",
    "section": "Who Earns Most?",
    "text": "Who Earns Most?\nBased on our previous plots for spending on food and shelter across education levels, there are slight observed positive correlations. However, we cannot be sure if wages earned is also correlated. If that is the case, then we cannot attribute the correlation with certainty to either variable.\nIn this section, we will explore which demographics earn the most in terms of wages.\n\nHousehold SizeKids?AgeEducation Level\n\n\n\n\nCode\ntmp &lt;- merged_data %&gt;%\n  filter(category == \"Wage\") %&gt;%\n  group_by(householdSize) %&gt;%\n  summarise(average_monthly_amount = mean(monthly_total_amount))\n\nggplot(tmp, aes(x = householdSize, y = average_monthly_amount)) +\n  geom_bar(stat = \"identity\", fill = \"#80b1d3\") +\n  labs(title = \"Average Monthly Wages by Household Size\",\n       subtitle = \"Participants with larger households earn more in wages.\",\n       x = \"\\nHousehold Size\",\n       y = \"Average Monthly Wages ($)\\n\") +\n  theme_bw() +\n  theme(plot.title = element_text(face = \"bold\", size = 14),\n        plot.subtitle = element_text(size = 12))\n\n\n\n\n\n\n\n\n\nCode\ntmp &lt;- merged_data %&gt;%\n  filter(category == \"Wage\") %&gt;%\n  group_by(haveKids) %&gt;%\n  summarise(average_monthly_amount = mean(monthly_total_amount))\n\nggplot(tmp, aes(x = haveKids, y = average_monthly_amount)) +\n  geom_bar(stat = \"identity\", fill = \"#80b1d3\") +\n  labs(title = \"Average Monthly Wages by Presence of Kids\",\n       subtitle = \"Participants with kids earn more in wages.\",\n       x = \"\\nParticipants have kids?\",\n       y = \"Average Monthly Wages ($)\\n\") +\n  theme_bw() +\n  theme(plot.title = element_text(face = \"bold\", size = 14),\n        plot.subtitle = element_text(size = 12))\n\n\n\n\n\n\n\n\n\nCode\ntmp &lt;- merged_data %&gt;%\n  filter(category == \"Wage\") %&gt;%\n  group_by(ageGroup) %&gt;%\n  summarise(average_monthly_amount = mean(monthly_total_amount))\n\nggplot(tmp, aes(x = ageGroup, y = average_monthly_amount)) +\n  geom_bar(stat = \"identity\", fill = \"#80b1d3\") +\n  labs(title = \"Average Monthly Wages by Age Group\",\n       subtitle = \"Wages do not increase with age.\",\n       x = \"\\nAge Group\",\n       y = \"Average Monthly Wages ($)\\n\") +\n  theme_bw() +\n  theme(plot.title = element_text(face = \"bold\", size = 14),\n        plot.subtitle = element_text(size = 12))\n\n\n\n\n\n\n\n\n\nCode\ntmp &lt;- merged_data %&gt;%\n  filter(category == \"Wage\") %&gt;%\n  group_by(educationLevel) %&gt;%\n  summarise(average_monthly_amount = mean(monthly_total_amount))\n\nggplot(tmp, aes(x = educationLevel, y = average_monthly_amount)) +\n  geom_bar(stat = \"identity\", fill = \"#80b1d3\") +\n  labs(title = \"Average Monthly Wages by Education Level\",\n       subtitle = \"Wages increase as education level increases.\",\n       x = \"\\nEducation Level\",\n       y = \"Average Monthly Wages ($)\\n\") +\n  theme_bw() +\n  theme(plot.title = element_text(face = \"bold\", size = 14),\n        plot.subtitle = element_text(size = 12))\n\n\n\n\n\n\n\n\nConclusions:\n\nParticipants earn more in wages when householdSize increases and when they have kids. Could it be that they work harder when they have a family?\nWages do not increase when participants’ age increases. This is rather surprising and seems to suggest that jobs in this city (perhaps due to their agricultural nature) do not come with increments over time, and that having more experience does not command higher wages.\nWages increase as education level of participants increases."
  },
  {
    "objectID": "take-home_ex/take-home_ex_01.html#household-size-3",
    "href": "take-home_ex/take-home_ex_01.html#household-size-3",
    "title": "Take-home Exercise 01",
    "section": "Household Size",
    "text": "Household Size\n\n\nCode\ntmp &lt;- merged_data %&gt;%\n  filter(category == \"Recreation\") %&gt;%\n  group_by(householdSize) %&gt;%\n  summarise(average_monthly_amount = mean(monthly_total_amount))\n\nggplot(tmp, aes(x = householdSize, y = abs(average_monthly_amount))) +\n  geom_bar(stat = \"identity\", fill = \"steelblue\") +\n  labs(title = \"Average Monthly Amount Spent on Recreation by Household Size\",\n       subtitle = \"Slight increase in spending on recreation when household size increases\",\n       x = \"\\nHousehold Size\",\n       y = \"Average Monthly Amount\\nSpent on Recreation ($)\\n\") +\n  theme_bw() +\n  theme(plot.title = element_text(face = \"bold\", size = 14),\n        plot.subtitle = element_text(size = 12))"
  },
  {
    "objectID": "take-home_ex/take-home_ex_01.html#kids-3",
    "href": "take-home_ex/take-home_ex_01.html#kids-3",
    "title": "Take-home Exercise 01",
    "section": "Kids?",
    "text": "Kids?\n\n\nCode\ntmp &lt;- merged_data %&gt;%\n  filter(category == \"Recreation\") %&gt;%\n  group_by(haveKids) %&gt;%\n  summarise(average_monthly_amount = mean(monthly_total_amount))\n\nggplot(tmp, aes(x = haveKids, y = abs(average_monthly_amount))) +\n  geom_bar(stat = \"identity\", fill = \"steelblue\") +\n  labs(title = \"Average Monthly Amount Spent on Recreation by Presence of Kids\",\n       subtitle = \"Slight increase in spending on recreation when participants have kids.\",\n       x = \"\\nParticipants have kids?\",\n       y = \"Average Monthly Amount\\nSpent on Recreation ($)\\n\") +\n  theme_bw() +\n  theme(plot.title = element_text(face = \"bold\", size = 14),\n        plot.subtitle = element_text(size = 12))"
  },
  {
    "objectID": "take-home_ex/take-home_ex_01.html#age-2",
    "href": "take-home_ex/take-home_ex_01.html#age-2",
    "title": "Take-home Exercise 01",
    "section": "Age",
    "text": "Age\n\n\nCode\ntmp &lt;- merged_data %&gt;%\n  filter(category == \"Recreation\") %&gt;%\n  group_by(ageGroup) %&gt;%\n  summarise(average_monthly_amount = mean(monthly_total_amount))\n\nggplot(tmp, aes(x = ageGroup, y = abs(average_monthly_amount))) +\n  geom_bar(stat = \"identity\", fill = \"steelblue\") +\n  labs(title = \"Average Monthly Amount Spent on Recreation by Age Group\",\n       subtitle = \"Roughly equal spending on recreation across age groups.\",\n       x = \"\\nAge Group\",\n       y = \"Average Monthly Amount\\nSpent on Recreation ($)\\n\") +\n  theme_bw() +\n  theme(plot.title = element_text(face = \"bold\", size = 14),\n        plot.subtitle = element_text(size = 12))"
  },
  {
    "objectID": "take-home_ex/take-home_ex_01.html#education-level-4",
    "href": "take-home_ex/take-home_ex_01.html#education-level-4",
    "title": "Take-home Exercise 01",
    "section": "Education Level",
    "text": "Education Level\n\n\nCode\ntmp &lt;- merged_data %&gt;%\n  filter(category == \"Recreation\") %&gt;%\n  group_by(educationLevel) %&gt;%\n  summarise(average_monthly_amount = mean(monthly_total_amount))\n\nggplot(tmp, aes(x = educationLevel, y = abs(average_monthly_amount))) +\n  geom_bar(stat = \"identity\", fill = \"steelblue\") +\n  labs(title = \"Average Monthly Amount Spent on Recreation by Education Level\",\n       subtitle = \"Roughly equal spending on recreation across education levels.\",\n       x = \"\\nEducation Level\",\n       y = \"Average Monthly Amount\\nSpent on Recreation ($)\\n\") +\n  theme_bw() +\n  theme(plot.title = element_text(face = \"bold\", size = 14),\n        plot.subtitle = element_text(size = 12))"
  },
  {
    "objectID": "take-home_ex/take-home_ex_01.html#interests",
    "href": "take-home_ex/take-home_ex_01.html#interests",
    "title": "Take-home Exercise 01",
    "section": "Interests",
    "text": "Interests\n\n\nCode\ntmp &lt;- merged_data %&gt;%\n  filter(category == \"Recreation\") %&gt;%\n  group_by(interestGroup) %&gt;%\n  summarise(average_monthly_amount = mean(monthly_total_amount))\n\nggplot(tmp, aes(x = reorder(interestGroup, -abs(average_monthly_amount)), y = abs(average_monthly_amount))) +\n  geom_bar(stat = \"identity\", fill = \"steelblue\") +\n  labs(title = \"Average Monthly Amount Spent on Recreation by Interest Group\",\n       subtitle = \"Slight differences in spending on recreation across interest groups.\\nCould some hobbies be more expensive than the others?\",\n       x = \"\\nInterest Group\",\n       y = \"Average Monthly Amount\\nSpent on Recreation ($)\\n\") +\n  theme_bw() +\n  theme(plot.title = element_text(face = \"bold\", size = 14),\n        plot.subtitle = element_text(size = 12))"
  },
  {
    "objectID": "take-home_ex/take-home_ex_01.html#household-size-4",
    "href": "take-home_ex/take-home_ex_01.html#household-size-4",
    "title": "Take-home Exercise 01",
    "section": "Household Size",
    "text": "Household Size"
  },
  {
    "objectID": "take-home_ex/take-home_ex_01.html#is-expenditure-positively-correlated-with-wage",
    "href": "take-home_ex/take-home_ex_01.html#is-expenditure-positively-correlated-with-wage",
    "title": "Take-home Exercise 01",
    "section": "Is Expenditure Positively Correlated with Wage?",
    "text": "Is Expenditure Positively Correlated with Wage?"
  },
  {
    "objectID": "take-home_ex/take-home_ex_01.html#does-higher-wage-equate-more-happiness",
    "href": "take-home_ex/take-home_ex_01.html#does-higher-wage-equate-more-happiness",
    "title": "Take-home Exercise 01",
    "section": "Does Higher Wage Equate More Happiness?",
    "text": "Does Higher Wage Equate More Happiness?\nThere is still one more variable that we have yet to explore - joviality in the demographics dataset.\nLastly, we will check whether higher wages lead to more happiness."
  },
  {
    "objectID": "take-home_ex/take-home_ex_01.html#increased-spending-on-food-and-shelter-due-to-wage-or-education",
    "href": "take-home_ex/take-home_ex_01.html#increased-spending-on-food-and-shelter-due-to-wage-or-education",
    "title": "Take-home Exercise 01",
    "section": "Increased Spending on Food and Shelter: Due to Wage or Education?",
    "text": "Increased Spending on Food and Shelter: Due to Wage or Education?\nWe noted earlier that education level was positively correlated with spending on food and shelter. But education level is also positively correlated with wages.\nTo have better clarity on the relationship between the four variables, we will perform two multiple linear regressions. We will skip the usual checks for a linear regression model as we just want to obtain some quick insights.\n\n# Prepare the variables and merge into a dataframe\nwage &lt;- merged_data %&gt;%\n  filter(category == \"Wage\") %&gt;%\n  select(participantId, monthly_wage = monthly_total_amount)\nfood &lt;- merged_data %&gt;%\n  filter(category == \"Food\") %&gt;%\n  select(participantId, monthly_food = monthly_total_amount)\nshelter &lt;- merged_data %&gt;%\n  filter(category == \"Shelter\") %&gt;%\n  select(participantId, monthly_shelter = monthly_total_amount)\neducation &lt;- merged_data %&gt;%\n  select(participantId, educationLevel) %&gt;%\n  distinct()\nlm_df &lt;- inner_join(wage, food, by = \"participantId\") %&gt;%\n  inner_join(shelter, by = \"participantId\") %&gt;%\n  inner_join(education, by = \"participantId\")\n\n\nFood ~ Wage + educationLevelShelter ~ Wage + educationLevel\n\n\n\nmodel &lt;- lm(monthly_food ~ monthly_wage + educationLevel,\n            data = lm_df)\nsummary(model)\n\n\nCall:\nlm(formula = monthly_food ~ monthly_wage + educationLevel, data = lm_df)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-211.99  -65.51   22.07   62.78  140.72 \n\nCoefficients:\n                   Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)      -4.026e+02  6.559e+00 -61.382  &lt; 2e-16 ***\nmonthly_wage      1.240e-02  1.312e-03   9.449  &lt; 2e-16 ***\neducationLevel.L -5.220e+01  8.643e+00  -6.039 2.29e-09 ***\neducationLevel.Q -4.486e+00  6.517e+00  -0.688    0.491    \neducationLevel.C  2.411e+00  4.864e+00   0.496    0.620    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 74.55 on 875 degrees of freedom\nMultiple R-squared:  0.09867,   Adjusted R-squared:  0.09455 \nF-statistic: 23.95 on 4 and 875 DF,  p-value: &lt; 2.2e-16\n\n\n\n\n\nmodel &lt;- lm(monthly_shelter ~ monthly_wage + educationLevel,\n            data = lm_df)\nsummary(model)\n\n\nCall:\nlm(formula = monthly_shelter ~ monthly_wage + educationLevel, \n    data = lm_df)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-877.5 -140.5  -18.6  192.4  416.4 \n\nCoefficients:\n                   Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)      -6.684e+02  1.836e+01 -36.412  &lt; 2e-16 ***\nmonthly_wage      8.191e-03  3.672e-03   2.230    0.026 *  \neducationLevel.L -1.347e+02  2.419e+01  -5.567 3.45e-08 ***\neducationLevel.Q  1.845e+01  1.824e+01   1.012    0.312    \neducationLevel.C  7.354e+00  1.361e+01   0.540    0.589    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 208.6 on 875 degrees of freedom\nMultiple R-squared:  0.0425,    Adjusted R-squared:  0.03812 \nF-statistic:  9.71 on 4 and 875 DF,  p-value: 1.097e-07\n\n\n\n\n\nBased on the output of the models, while the coefficients on monthly_wage are statistically significant at the 5% level (indicated by at least a * next to the p-values), the multiple R-squared is very low, at less than 10% for both models. This means that less than 10% of the variance in monthly_food and monthly_shelter are explained by the regression models. There are likely to be some omitted variables that, when included, would help explain the variance in the dependent variables better.\nOn the other hand, when a linear regression of monthly_wage on educationLevel is performed:\n\nmodel &lt;- lm(monthly_wage ~ educationLevel,\n            data = lm_df)\nsummary(model)\n\n\nCall:\nlm(formula = monthly_wage ~ educationLevel, data = lm_df)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-4291.7 -1116.8  -396.6   645.2 12521.2 \n\nCoefficients:\n                 Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)       4341.49      83.69  51.874  &lt; 2e-16 ***\neducationLevel.L  2798.39     201.46  13.890  &lt; 2e-16 ***\neducationLevel.Q   346.57     167.39   2.071 0.038697 *  \neducationLevel.C  -454.35     124.29  -3.656 0.000272 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1919 on 876 degrees of freedom\nMultiple R-squared:  0.3076,    Adjusted R-squared:  0.3053 \nF-statistic: 129.7 on 3 and 876 DF,  p-value: &lt; 2.2e-16\n\n\nA single explanatory variable in this model already achieved an adjusted R-squared of 30.5%. This implies that 30.5% of the variation in monthly wage is explained by variations in education level.\nHowever, the model does fail the usual checks, such as this one for normality of residuals:\n\ncheck_normality(model) %&gt;% plot()\n\n\n\n\nThis is likely because of the fact that we are using a discrete explanatory variable, educationLevel, with only 4 levels. Hence, the results of these linear regression models should be taken with a pinch of salt."
  }
]